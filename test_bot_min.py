import requests
import telebot
from telebot import types
import json

bot = telebot.TeleBot('6593300298:AAEWcG4JOQjbnuLRB890fG9JWT-MkioysS0')
API = '19ba22ee457e853446eb51d80bd51773'

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    btn_good = types.KeyboardButton('–û—Ç–ª–∏—á–Ω–æ!')
    btn_sad = types.KeyboardButton('–ì—Ä—É—Å—Ç–Ω–µ–Ω—å–∫–æ...')
    markup.row(btn_good, btn_sad)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?', reply_markup=markup)
    bot.register_next_step_handler(message, on_click)

def on_click(message):
    if message.text == '–û—Ç–ª–∏—á–Ω–æ!':
        markup = types.InlineKeyboardMarkup()
        btn_news = types.InlineKeyboardButton('–ü–æ—á–∏—Ç–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏?ü§ì', callback_data='news', url='https://meduza.io')
        btn_walking = types.InlineKeyboardButton('–ü–æ–≥—É–ª—è–µ–ºü§†?', callback_data='walking')
        markup.row(btn_news, btn_walking)
        bot.reply_to(message, f'{message.from_user.first_name}! –†–∞–¥–∞ —Å–ª—ã—à–∞—Ç—å! –¢–æ–≥–¥–∞ —á—Ç–æ –ø–æ–¥–µ–ª–∞–µ–º?', reply_markup=markup)
    elif message.text == '–ì—Ä—É—Å—Ç–Ω–µ–Ω—å–∫–æ...':
        markup = types.InlineKeyboardMarkup()
        btn_films = types.InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–∏–º —Ñ–∏–ª—å–º—ã?üëÅ', callback_data='films', url='https://www.kinopoisk.ru')
        btn_memes = types.InlineKeyboardButton('–ü–æ–ª–∏—Å—Ç–∞–µ–º –º–µ–º–∞—Å–∏–∫–∏?üëâ', callback_data='memes', url='https://www.reddit.com/r/memes/')
        markup.row(btn_films, btn_memes)
        bot.reply_to(message, f'{message.from_user.first_name}! –ù—É —Ç–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ FUN!', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'news':
        bot.send_message(callback.message.chat.id, '–ó–¥–æ—Ä–æ–≤–æ, –ø–æ—á–∏—Ç–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏?')
    elif callback.data == 'walking':
        bot.send_message(callback.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø–æ–≥—É–ª—è–µ–º? –¢—ã —Å–µ–π—á–∞—Å –≥–¥–µ?')
    elif callback.data == 'films':
        bot.send_message(callback.message.chat.id, '–ñ–∞–ª—å —Å–ª—ã—à–∞—Ç—å, –æ—Ç–≤–ª–µ—á–µ–º—Å—è –Ω–∞ —Ñ–∏–ª—å–º—ã?')
    elif callback.data == 'memes':
        bot.send_message(callback.message.chat.id, '–¢–æ–≥–¥–∞, –º–æ–∂–µ—Ç, –ø–æ–ª–∏—Å—Ç–∞–µ–º –º–µ–º–∞—Å–∏–∫–∏?')

@bot.message_handler(content_types=['text'])
def get_weather(message):
    city = message.text.strip().lower()
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
    data = json.loads(res.text)
    temp = data["main"]["temp"]
    if temp > 5.0:
        bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ {temp} –≥—Ä–∞–¥—É—Å–æ–≤. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {data["wind"]["speed"]} –º–µ—Ç—Ä/—Å–µ–∫. –ò–¥–∏ –≥—É–ª—è—Ç—å üòé')
    else:
        bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ {temp} –≥—Ä–∞–¥—É—Å–æ–≤. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {data["wind"]["speed"]} –º–µ—Ç—Ä/—Å–µ–∫. –ü–æ–∂–∞–ª—É–π, –ª—É—á—à–µ –ø–æ—Å–∏–¥–µ—Ç—å –¥–æ–º–∞ ü•∂, –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏!')

bot.polling(none_stop=True)
